<Window x:Class="TransLiner.TransLinerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TransLiner"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="525" Closed="Window_Closed" Loaded="Window_Loaded" PreviewKeyDown="Window_PreviewKeyDown">
    <Grid x:Name="mainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="86*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="188*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="299*"/>
        </Grid.ColumnDefinitions>
        <GridSplitter x:Name="gridSplitter" HorizontalAlignment="Stretch" Margin="0" Width="5" Grid.Row="2" Grid.Column="1"/>
        <Menu x:Name="menu" Margin="0" VerticalAlignment="Top" Grid.ColumnSpan="3">
            <MenuItem Header="ファイル(_F)">
                <MenuItem x:Name="menuOpen" Header="開く(_O)">
                    <MenuItem Header="全体を置き換える(_A)">
                        <MenuItem Header="XML(_X)..." Command="{Binding LoadXMLCommand}"/>
                        <MenuItem Header="OPML(_O)..." Command="{Binding LoadOPMLCommand}"/>
                        <MenuItem Header="テキスト(インデント形式)(_I)..." Command="{Binding LoadTextCommand}"/>
                        <MenuItem Header="テキスト(マークアップ形式)(_M)..." Command="{Binding LoadMarkUpTextCommand}"/>
                    </MenuItem>
                    <MenuItem Header="選択した項目に追加(_S)">
                        <MenuItem Header="XML(_X)..." Command="{Binding LoadXMLSelectionCommand}"/>
                        <MenuItem Header="OPML(_O)..." Command="{Binding LoadOPMLSelectionCommand}"/>
                        <MenuItem Header="テキスト(インデント形式)(_I)..." Command="{Binding LoadTextSelectionCommand}"/>
                        <MenuItem Header="テキスト(マークアップ形式)(_M)..." Command="{Binding LoadMarkUpTextSelectionCommand}"/>
                    </MenuItem>
                </MenuItem>
                <MenuItem x:Name="menuSave" Header="全体を保存(_S)" InputGestureText="Ctrl+S"/>
                <MenuItem x:Name="menuSaveAs" Header="名前を付けて保存(_A)...">
                    <MenuItem Header="全体を保存(_A)">
                        <MenuItem Header="XML(_X)..." Command="{Binding SaveXMLCommand}"/>
                        <MenuItem Header="OPML(_O)..." Command="{Binding SaveOPMLCommand}"/>
                        <MenuItem Header="テキスト(インデント形式)(_I)..." Command="{Binding SaveTextCommand}"/>
                        <MenuItem Header="テキスト(マークアップ形式)(_M)..." Command="{Binding SaveMarkUpTextCommand}"/>
                    </MenuItem>
                    <MenuItem Header="選択した項目を保存(_S)">
                        <MenuItem Header="XML(_X)..." Command="{Binding SaveXMLSelectionCommand}"/>
                        <MenuItem Header="OPML(_O)..." Command="{Binding SaveOPMLSelectionCommand}"/>
                        <MenuItem Header="テキスト(インデント形式)(_I)..." Command="{Binding SaveTextSelectionCommand}"/>
                        <MenuItem Header="テキスト(マークアップ形式)(_M)..." Command="{Binding SaveMarkUpTextSelectionCommand}"/>
                    </MenuItem>
                </MenuItem>
                <MenuItem x:Name="menuExit" Header="終了(_X)" Command="{Binding CloseCommand}"/>
            </MenuItem>
            <MenuItem Header="編集(_E)" >
                <MenuItem Header="項目の移動(_M)">
                    <MenuItem Header="上に移動(_U)" Command="{Binding MoveUp}"/>
                    <MenuItem Header="下に移動(_D)" Command="{Binding MoveDown}"/>
                    <MenuItem Header="左(上位)の上に移動(_L)" Command="{Binding MoveLeftUp}"/>
                    <MenuItem Header="左(上位)の下に移動" Command="{Binding MoveLeftDown}"/>
                    <MenuItem Header="上の右(下位)の先頭に移動" Command="{Binding MoveUpRightTop}"/>
                    <MenuItem Header="上の右(下位)の最後尾に移動" Command="{Binding MoveUpRightBottom}"/>
                    <MenuItem Header="下の右(下位)の先頭に移動(_R)" Command="{Binding MoveDownRightTop}"/>
                    <MenuItem Header="下の右(下位)の最後尾に移動" Command="{Binding MoveDownRightBottom}"/>
                </MenuItem>
                <MenuItem Header="項目の作成(_C)">
                    <MenuItem Header="上に作成(_U)" Command="{Binding CreateUp}"/>
                    <MenuItem Header="下に作成(_D)" Command="{Binding CreateDown}"/>
                    <MenuItem Header="右(下位)の先頭に作成(_R)" Command="{Binding CreateRightTop}"/>
                    <MenuItem Header="右(下位)の最後尾に作成" Command="{Binding CreateRightBottom}"/>
                </MenuItem>
                <MenuItem Header="項目の複製(_D)">
                    <MenuItem Header="上に複製(_U)" Command="{Binding DuplicateUp}"/>
                    <MenuItem Header="下に複製(_D)" Command="{Binding DuplicateDown}"/>
                    <MenuItem Header="右(下位)の先頭に複製(_R)" Command="{Binding DuplicateRightTop}"/>
                    <MenuItem Header="右(下位)の最後尾に複製" Command="{Binding DuplicateRightBottom}"/>
                </MenuItem>
                <MenuItem Header="項目を削除(_X)" Command="{Binding DeleteCommand}"/>
            </MenuItem>
            <MenuItem Header="設定(_S)" >
                <MenuItem x:Name="menuEncoding" Header="エンコーディング(_E)">
                    <MenuItem x:Name="menuEncodingDefault" Header="Default(_D)" IsCheckable="True" Click="menuEncodingDefault_Click" />
                    <MenuItem x:Name="menuEncodingUnicode" Header="Unicode(_U)" IsCheckable="True" Click="menuEncodingUnicode_Click" />
                    <MenuItem x:Name="menuEncodingUTF7" Header="UTF7(_7)" IsCheckable="True" Click="menuEncodingUTF7_Click" />
                    <MenuItem x:Name="menuEncodingUTF8" Header="UTF8(_8)" IsCheckable="True" Click="menuEncodingUTF8_Click" />
                    <MenuItem x:Name="menuEncodingUTF32" Header="UTF32(_3)" IsCheckable="True" Click="menuEncodingUTF32_Click" />
                </MenuItem>
                <MenuItem x:Name="menuLine" Header="テキスト行末(_L)">
                    <MenuItem x:Name="menuLineCR" Header="CR(_R)" IsCheckable="True" Click="menuLineCR_Click" />
                    <MenuItem x:Name="menuLineLF" Header="LF(_L)" IsCheckable="True" Click="menuLineLF_Click" />
                    <MenuItem x:Name="menuLineCRLF" Header="CR+LF(_A)" IsCheckable="True" Click="menuLineCRLF_Click"/>
                </MenuItem>
                <MenuItem x:Name="menuText" Header="テキスト設定(_T)" Command="{Binding TextSettings}"/>
            </MenuItem>
            <MenuItem Header="ヘルプ(_H)" >
                <MenuItem x:Name="menuHelp" Header="ヘルプ(_H)" Command="{Binding HelpCommand}"/>
                <MenuItem x:Name="menuAbout" Header="バージョン情報(_A)" Command="{Binding VersionCommand}"/>
            </MenuItem>
        </Menu>
        <TreeView x:Name="treeView" Margin="0" Grid.Row="2">
            <TreeViewItem ItemsSource="{Binding Path=SubPages}" Header="{Binding Path=Title, Mode=OneWay}"  />
            <TreeView.Resources>
                <Style TargetType="TreeViewItem">
                    <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}"/>
                    <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}"/>
                </Style>
                <HierarchicalDataTemplate DataType = "{x:Type local:TLPage}" ItemsSource = "{Binding Path=SubPages}">
                    <TextBlock Text="{Binding Path=Title, Mode=OneWay}" />
                </HierarchicalDataTemplate>
            </TreeView.Resources>
        </TreeView>
        <StackPanel Grid.ColumnSpan="3" HorizontalAlignment="Left" Margin="0,0,0,0" Grid.Row="1" Grid.RowSpan="1" VerticalAlignment="Top" Orientation="Horizontal">
            <Button x:Name="buttonUp" Content="↑" Margin="0" Grid.Row="1" Command="{Binding MoveUp}"/>
            <Button x:Name="buttonDown" Content="↓" Margin="0" Grid.Row="1" Command="{Binding MoveDown}"/>
            <Button x:Name="buttonLeftUp" Content="↑←" Margin="0" Grid.Row="1" Command="{Binding MoveLeftUp}"/>
            <Button x:Name="buttonLeftDown" Content="↓←" Margin="0" Grid.Row="1" Command="{Binding MoveLeftDown}"/>
            <Button x:Name="buttonUpRightTop" Content="↑→Ｔ" Margin="0" Grid.Row="1" Command="{Binding MoveUpRightTop}"/>
            <Button x:Name="buttonUpRightBottom" Content="↑→⊥" Margin="0" Grid.Row="1" Command="{Binding MoveUpRightBottom}"/>
            <Button x:Name="buttonDownRightTop" Content="↓→Ｔ" Margin="0" Grid.Row="1" Command="{Binding MoveDownRightTop}"/>
            <Button x:Name="buttonDownRightBottom" Content="↓→⊥" Margin="0" Grid.Row="1" Command="{Binding MoveDownRightBottom}"/>
            <Button x:Name="buttonCreateUp" Content="↑＊" Margin="0" Grid.Row="1" Command="{Binding CreateUp}"/>
            <Button x:Name="buttonCreateDown" Content="↓＊" Margin="0" Grid.Row="1" Command="{Binding CreateDown}"/>
            <Button x:Name="buttonCreateRightTop" Content="→Ｔ＊" Margin="0" Grid.Row="1" Command="{Binding CreateRightTop}"/>
            <Button x:Name="buttonCreateRightBottom" Content="→⊥＊" Margin="0" Grid.Row="1" Command="{Binding CreateRightBottom}"/>
            <Button x:Name="buttonDuplicateUp" Content="↑＋" Margin="0" Grid.Row="1" Command="{Binding DuplicateUp}"/>
            <Button x:Name="buttonDuplicateDown" Content="↓＋" Margin="0" Grid.Row="1" Command="{Binding DuplicateDown}"/>
            <Button x:Name="buttonDuplicateRightTop" Content="→Ｔ＋" Margin="0" Grid.Row="1" Command="{Binding DuplicateRightTop}"/>
            <Button x:Name="buttonDuplicateRightBottom" Content="→⊥＋" Margin="0" Grid.Row="1" Command="{Binding DuplicateRightBottom}"/>
            <Button x:Name="buttonDelete" Content="×" Margin="0" Grid.Row="1" Command="{Binding DeleteCommand}"/>
        </StackPanel>
        <TextBox x:Name="textBox" AcceptsReturn="True" VerticalContentAlignment="Top" Grid.Column="2" Margin="0" Grid.Row="2" TextWrapping="Wrap" Text="{Binding Path=SelectedText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
    </Grid>
</Window>
